class Rain{constructor({app:app,resource:{smoke:smoke,drop:drop,sound:sound}}){this.app=app,this.size={width:Math.min(app.clientWidth,1e3),height:Math.min(app.clientHeight,1e3)},this.resource={smoke:smoke,drop:drop,sound:sound},this.color={fog:1118481,drop:16772846,ambientLight:3355443,directionalLight:16772829,pointLight1:271998,pointLight2:7637246},this.isMobile=!1,this.audio=null,this.cloudParticles=[],this.rainCount=null,this.scene=null,this.camera=null,this.rain=null,this.rainGeometry=null,this.cloud=null,this.ambientLight=null,this.directionalLight=null,this.pointLight=null,this.pointLight1=null,this.pointLight2=null,this.renderer=null,this.lightningTimer=null,this.init()}init(){this.initAudio(),this.initEvents(),this.initRainCount(),this.initScene(),this.initCamera(),this.initLoader(),this.initAmbientLight(),this.initDirectionalLight(),this.initpointLight(),this.initRain(),this.initCloud(),this.initRenderer(),this.appendDom(),this.animate()}initAudio(){const{sound:sound}=this.resource;this.sound=new Audio(sound),this.sound.loop=!0,this.sound.muted=!0,this.sound.load()}initEvents(){this.app.addEventListener(this.isMobile?"touchend":"click",()=>this.lightning())}initRainCount(){const{size:{width:width,height:height}}=this;this.rainCount=Math.floor(width*height/50)}initScene(){this.scene=new THREE.Scene,this.scene.fog=new THREE.FogExp2(this.color.fog,5e-4)}initCamera(){const{size:{width:width,height:height}}=this;this.camera=new THREE.PerspectiveCamera(60,width/height,1,1e3),this.camera.position.z=1,this.camera.rotation.x=1.16,this.camera.rotation.y=-.12,this.camera.rotation.z=.27}initLoader(){this.loader=new THREE.TextureLoader}initAmbientLight(){this.ambientLight=new THREE.AmbientLight(this.color.ambientLight),this.scene.add(this.ambientLight)}initDirectionalLight(){this.directionalLight=new THREE.DirectionalLight(this.color.directionalLight),this.directionalLight.position.set(0,0,1),this.scene.add(this.directionalLight)}initpointLight(){this.pointLight1=new THREE.PointLight(this.color.pointLight1,30,500,2),this.pointLight2=new THREE.PointLight(this.color.pointLight2,20,500,1.5),this.pointLight=this.pointLight1,this.scene.add(this.pointLight1),this.scene.add(this.pointLight2)}initRain(){const rainMeterial=this.getRainMeterial(),rainGeometry=this.getRainGeometry();this.rain=new THREE.Points(rainGeometry,rainMeterial),this.rainGeometry=rainGeometry,this.scene.add(this.rain)}getRainGeometry(){const rainGeometry=new THREE.Geometry;for(let i=0,len=this.rainCount;i<len;i++){const randomX=100*Math.random()-50,randomY=400*Math.random()-200,randomZ=400*Math.random()-300,rainDrop=new THREE.Vector3(randomX,randomY,randomZ);rainDrop.originalX=randomX,rainDrop.originalZ=randomZ,rainDrop.velocity=0,rainGeometry.vertices.push(rainDrop)}return rainGeometry}getRainMeterial(){const{resource:{drop:drop},color:color}=this;return new THREE.PointsMaterial({color:color.drop,size:1,map:this.loader.load(drop),depthTest:!1,blending:THREE.AdditiveBlending,opacity:.7,transparent:!0})}initCloud(){const{size:{width:width,height:height},resource:{smoke:smoke}}=this,cloudLength=Math.floor(width*height/1e4),cloudGeometry=new THREE.PlaneBufferGeometry(400,400),cloudMaterial=new THREE.MeshLambertMaterial({map:this.loader.load(smoke),transparent:!0});for(let i=0;i<cloudLength;i++){const cloud=new THREE.Mesh(cloudGeometry,cloudMaterial);cloud.position.set(Math.random()*width-width/2,400,Math.random()*height-height/2-100),cloud.rotation.x=1.16,cloud.rotation.y=-.12,cloud.rotation.z=360*Math.random(),cloud.material.opacity=.8,this.cloudParticles.push(cloud),this.scene.add(cloud)}}initRenderer(){const{scene:{fog:{color:color}},size:{width:width,height:height}}=this;this.renderer=new THREE.WebGLRenderer,this.renderer.setClearColor(color),this.renderer.setSize(width,height)}appendDom(){this.app.appendChild(this.renderer.domElement)}mute(isMute){const{sound:sound}=this;if(0===sound.currentTime){const promise=sound.play();promise||promise.then(()=>sound.play()).catch(err=>console.error(err))}sound.muted=!!isMute}lightning(){this.lightningTimer&&clearTimeout(this.lightningTimer),this.lightningTimer=setTimeout(()=>this.lightningTimer=null,1e3),this.changePointLight(!0)}checkAudioLoop(){const{sound:sound}=this;if(!sound.muted){const currentTime=sound.currentTime,duration=sound.duration,percent=currentTime/duration;percent>.85?(sound.volume>.3&&(sound.volume-=.005),(percent>.98||sound.volume<=.3)&&(sound.pause(),sound.currentTime=0,sound.play())):sound.volume<.99&&(sound.volume+=.005)}}changePointLight(isShining){const{pointLight1:pointLight1,pointLight2:pointLight2}=this;let random=Math.random();isShining&&(this.pointLight=pointLight1,random=1),random>.95&&(random>.98&&this.pointLight===pointLight1?(this.pointLight=pointLight2,pointLight1.power=0):(this.pointLight=pointLight1,pointLight2.power=0))}animate(){const{size:{width:width,height:height},cloudParticles:cloudParticles,rainGeometry:rainGeometry,pointLight:pointLight,renderer:renderer,scene:scene,camera:camera}=this,isLightning=!!this.lightningTimer;isLightning||this.changePointLight(),cloudParticles.forEach(v=>{v.rotation.z-=.001}),rainGeometry.verticesNeedUpdate=!0,rainGeometry.vertices.forEach(p=>{const rangeY_min=200*Math.random()-340,rangeY_max=200,rangeZ_min=-50,rangeZ_max=10;p.velocity-=.4,rangeZ_min<p.originalZ&&p.originalZ<rangeZ_max?p.y+=p.velocity/2:p.y+=p.velocity,p.y<rangeY_min&&(p.y=rangeY_max,p.velocity=0)}),(isLightning||Math.random()>.8)&&((isLightning||pointLight.power<100)&&pointLight.position.set(Math.random()*width-width/2,Math.random()*height,0),pointLight.power=500*Math.random()+(isLightning?100:50)),renderer.render(scene,camera),requestAnimationFrame(()=>{this.checkAudioLoop(),this.animate()})}}